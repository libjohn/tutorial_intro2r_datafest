---
title: "Import Data"
---

In this workshop we recommend the [tidyverse](https://tidyverse.org) approach to learning and using R

Tidyverse has several very handy library packages

| package   | use                | package     | use                 |
|-----------|--------------------|-------------|---------------------|
| `dplyr`   | data wrangling     | `forcats`   | categorical data    |
| `ggplot2` | visualization      | `lubridate` | dates and times     |
| `readr`   | import CSV         | `stringr`   | regular expressions |
| `purrr`   | iteration          | `tidyr`     | pivot data          |
| `readxl`  | import Excel files |             |                     |

## Load library packages

```{r}
#| warning: false
#| message: false
library(tidyverse)
```

## Import data

In RStudio,, in the Files quadrant and tab, click the `data` folder, then left-click the `brodhead_center.csv` file. Using the context menu, choose the *Import Dataset...* option. Once inside the data wizard, you can paste the necessary code into the code chunk below

```{r}
# library(readr)
brodhead_center <- read_csv("data/brodhead_center.csv")
# View(brodheadCenter)
```

### Look at the data object

```{r}
brodhead_center
```

## Wrangle

{[`dplyr`](https://dplyr.tidyverse.org)} verbs help you wrangle, clean, and normalize your data

| dplyr function | use for                                    |
|----------------|--------------------------------------------|
| `select()`     | subset columns                             |
| `filter()`     | subset rows                                |
| `arrange()`    | sort rows by column variable values        |
| `group_by()`   | use with summarize for subtotals           |
| `summarize()`  | generate column totals and subtotals, etc. |
| `count()`      | a specialized `summarize()` function       |

### Examples

#### `select()`

```{r}
brodhead_center |> 
  select(name, type)
```

::: column-margin
[![Select columns](images/select.svg){fig-alt="Select columns"}](https://dplyr.tidyverse.org/reference/select.html)
:::

#### `filter()`

```{r}
brodhead_center |> 
  filter(menuType == "dessert")
```

::: column-margin
[![Filter by rows](images/filter_by_rows.svg){fig-alt="Filter by rows"}](https://dplyr.tidyverse.org/reference/filter.html)
:::

#### `arrange()`

```{r}
brodhead_center |> 
  arrange(cost)
```

::: column-margin
[![Arrange rows by the values in a column](images/arrange_rows.svg){fig-alt="Arrange rows by the values in a column"}](https://dplyr.tidyverse.org/reference/arrange.html)
:::

#### `mutate()`

```{r}
brodhead_center |> 
  mutate(ratings_high = rating * 2)
```

::: column-margin
[![Create new variable or modify variable with mutate()](images/mutate.svg){fig-alt="Create new variable or modify variable with mutate()"}](https://dplyr.tidyverse.org/reference/mutate.html)
:::

#### `count()`

```{r}
#| label: margin-picture-count
#| echo: false
#| column: margin

brodhead_center |> 
  count(menuType) |> 
  arrange(desc(n)) |> 
  gt::gt() |> 
  gt::tab_header(title = "Count values in a group")
```

```{r}
brodhead_center |> 
  count(menuType)
```

#### `group_by()` & `summarise()`

```{r}
#| label: margin-picture-summarize
#| echo: false
#| column: margin

brodhead_center |> 
  summarise(Sum_of_cost = sum(cost)) |> 
  gt::gt() |> 
  gt::tab_header(title = "Summarise column")
```

```{r}
brodhead_center |> 
  group_by(name) |> 
  summarise(min_cost = min(cost), mean_cost = mean(cost), max_cost = max(cost))
```

## Visualize

Visualize your data with {[ggplot2](https://ggplot2.tidyverse.org)}

```{r}
brodhead_center |> 
  ggplot(aes(x = name, y = cost)) +
  geom_boxplot() 
```

```{r}
brodhead_center |> 
  ggplot(aes(x = rating, y = cost)) +
  geom_point(aes(color = name))
```
